services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: rocbird-postgres
    environment:
      POSTGRES_DB: rocbird_takehome
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AplicaciÃ³n Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rocbird-app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rocbird_takehome
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./prisma:/app/prisma
    restart: unless-stopped

  # Prisma Studio (opcional, para desarrollo)
  prisma-studio:
    image: node:18-alpine
    container_name: rocbird-prisma-studio
    working_dir: /app
    command: >
      sh -c "npm install -g prisma &&
              prisma studio --hostname 0.0.0.0 --port 5555"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/rocbird_takehome
    ports:
      - "5555:5555"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./prisma:/app/prisma
    profiles:
      - tools

volumes:
  postgres_data:
